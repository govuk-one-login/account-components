{
  "name": "account-components",
  "version": "1.0.0",
  "type": "module",
  "engines": {
    "node": ">=22.16.0 <23"
  },
  "dependencies": {
    "@aws-lambda-powertools/logger": "^2.17.0",
    "@aws-lambda-powertools/metrics": "^2.28.1",
    "@aws-lambda-powertools/parameters": "^2.27.0",
    "@aws-sdk/client-appconfigdata": "^3.901.0",
    "@aws-sdk/client-dynamodb": "^3.901.0",
    "@aws-sdk/client-kms": "^3.901.0",
    "@aws-sdk/client-s3": "^3.901.0",
    "@aws-sdk/client-sqs": "^3.901.0",
    "@aws-sdk/client-ssm": "^3.901.0",
    "@aws-sdk/lib-dynamodb": "^3.901.0",
    "@fastify/aws-lambda": "^6.0.0",
    "@fastify/cookie": "^11.0.2",
    "@fastify/csrf-protection": "^7.1.0",
    "@fastify/formbody": "^8.0.2",
    "@fastify/helmet": "^13.0.2",
    "@fastify/session": "^11.1.0",
    "@fastify/static": "^8.2.0",
    "@govuk-one-login/frontend-ui": "^4.0.0",
    "@smithy/node-http-handler": "^4.2.1",
    "aws-xray-sdk": "^3.10.3",
    "connect-dynamodb": "^3.0.5",
    "esbuild": "^0.25.11",
    "express-session": "^1.18.2",
    "fastify": "^5.6.1",
    "fastify-plugin": "^5.1.0",
    "govuk-frontend": "^5.12.0",
    "i18next": "^25.5.2",
    "i18next-http-middleware": "^3.8.1",
    "jose": "^6.0.10",
    "nunjucks": "^3.2.4",
    "valibot": "^1.1.0"
  },
  "devDependencies": {
    "@eslint/compat": "^1.4.0",
    "@eslint/js": "^9.38.0",
    "@stoplight/spectral-cli": "^6.15.0",
    "@tsconfig/node22": "^22.0.1",
    "@tsconfig/strictest": "^2.0.6",
    "@types/aws-lambda": "^8.10.152",
    "@types/express-session": "^1.18.2",
    "@types/node": "^22.18.12",
    "@types/nunjucks": "^3.2.6",
    "@vitest/coverage-v8": "^4.0.2",
    "@vitest/eslint-plugin": "^1.3.23",
    "chokidar-cli": "^3.0.0",
    "concurrently": "^9.2.1",
    "csso-cli": "^4.0.2",
    "eslint": "^9.38.0",
    "eslint-plugin-depend": "^1.3.1",
    "eslint-plugin-n": "^17.23.1",
    "eslint-plugin-playwright": "^2.2.2",
    "knip": "^5.66.2",
    "prettier": "^3.6.2",
    "rolldown": "^1.0.0-beta.44",
    "sass": "^1.93.2",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8.46.2",
    "vitest": "^4.0.2"
  },
  "scripts": {
    "install-brewfile": "cat Brewfile; echo; echo; read -p \"Install/update Brewfile dependencies as shown above (y/N)?\" -n 1 -r; echo; if [ \"$REPLY\" == \"y\" ]; then brew bundle check || brew bundle install; fi",
    "install-git-hooks": "pre-commit install --install-hooks --overwrite",
    "check-types": "tsc --noEmit",
    "eslint": "eslint . --report-unused-disable-directives --cache --max-warnings 0",
    "eslint:fix": "eslint . --fix --report-unused-disable-directives --cache --max-warnings 0",
    "tflint": "tflint --init && tflint --recursive --format compact --chdir solutions/infra",
    "tflint:fix": "tflint --init && tflint --recursive --format compact --chdir solutions/infra --fix",
    "cfnlint": "cfn-lint **/*.cf.yaml",
    "format": "prettier . --check",
    "format:fix": "prettier . --write",
    "knip": "knip",
    "knip:fix": "knip --fix --allow-remove-files",
    "test": "vitest run",
    "test:watch": "vitest",
    "test:coverage": "vitest run --coverage",
    "detect-secrets": "git ls-files -z | xargs -0 detect-secrets-hook --verbose --baseline .secrets.baseline # pragma: allowlist-secret",
    "check-gh-actions": "zizmor .",
    "check-gh-actions:fix": "zizmor . --fix",
    "sam-validate:core": "cd solutions/core && sam validate --region eu-west-2 --lint",
    "sam-validate:frontend": "cd solutions/frontend && sam validate --region eu-west-2 --lint",
    "sam-validate:stubs": "cd solutions/stubs && sam validate --region eu-west-2 --lint",
    "sam-validate:api": "cd solutions/api && sam validate --region eu-west-2 --lint",
    "build:frontend": "cd solutions/frontend && bash ../commons/utils/fastify/build/production.sh",
    "build-local:frontend": "cd solutions/frontend && bash ../commons/utils/fastify/build/local.sh",
    "watch:frontend": "chokidar \"./solutions/frontend/src/**/*\" \"./solutions/commons/**/*\" -c \"npm run build-local:frontend\"",
    "run:frontend": "([ -n \"$RUN_ALL\" ] || bash solutions/localstack/provision.sh) && npm run build-local:frontend && concurrently 'npm run watch:frontend' 'cd solutions/frontend && node --enable-source-maps --watch --env-file=$([ \"$IS_INTEGRATION_TEST\" = \"1\" ] && echo \".env.integration-tests\" || echo \".env\") ./dist/local.js' --kill-others",
    "build:stubs": "cd solutions/stubs && bash ../commons/utils/fastify/build/production.sh",
    "build-local:stubs": "cd solutions/stubs && bash ../commons/utils/fastify/build/local.sh",
    "watch:stubs": "chokidar \"./solutions/stubs/src/**/*\" \"./solutions/commons/**/*\" -c \"npm run build-local:stubs\"",
    "run:stubs": "([ -n \"$RUN_ALL\" ] || bash solutions/localstack/provision.sh) && npm run build-local:stubs && concurrently 'npm run watch:stubs' 'cd solutions/stubs && node --enable-source-maps --watch --env-file=$([ \"$IS_INTEGRATION_TEST\" = \"1\" ] && echo \".env.integration-tests\" || echo \".env\") ./dist/local.js' --kill-others",
    "build:api": "cd solutions/api && sam build --base-dir ../../",
    "run:api": "([ -n \"$RUN_ALL\" ] || bash solutions/localstack/provision.sh) && npm run build:api && cd solutions/api && ARCH=$(uname -m) && sam local start-api --warm-containers EAGER --port 6004 --env-vars=$([ \"$IS_INTEGRATION_TEST\" = \"1\" ] && echo \"env.integration-tests.json\" || echo \"env.json\") --parameter-overrides LambdaArchitecture=$([ \"$ARCH\" = \"arm64\" ] || [ \"$ARCH\" = \"aarch64\" ] && echo \"arm64\" || echo \"x86_64\")",
    "build:core": "cd solutions/core && sam build",
    "run:all": "bash solutions/localstack/provision.sh && RUN_ALL=1 concurrently 'npm run run:frontend' 'npm run run:stubs' 'npm run run:api' --kill-others",
    "config:validate": "for f in solutions/config/*.json; do (jsonschema validate solutions/config/schema/config.json $f) || exit 1; done",
    "api-specs:validate": "for f in solutions/api/src/specs/*.yaml; do (spectral lint $f) || exit 1; done"
  }
}
