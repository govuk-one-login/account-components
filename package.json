{
  "name": "account-components",
  "version": "1.0.0",
  "type": "module",
  "engines": {
    "node": "22"
  },
  "dependencies": {
    "@aws-sdk/client-dynamodb": "^3.888.0",
    "@aws-sdk/lib-dynamodb": "^3.888.0",
    "@fastify/aws-lambda": "^6.0.0",
    "@fastify/cookie": "^11.0.2",
    "@fastify/csrf-protection": "^7.1.0",
    "@fastify/formbody": "^8.0.2",
    "@fastify/helmet": "^13.0.1",
    "@fastify/session": "^11.1.0",
    "@fastify/static": "^8.2.0",
    "@fastify/type-provider-typebox": "^5.2.0",
    "@smithy/node-http-handler": "^4.2.1",
    "aws-xray-sdk": "^3.10.3",
    "fastify": "^5.6.0",
    "fastify-plugin": "^5.0.1",
    "nunjucks": "^3.2.4"
  },
  "devDependencies": {
    "@eslint/compat": "^1.3.1",
    "@eslint/js": "^9.35.0",
    "@fastify/swagger": "^9.5.1",
    "@stoplight/spectral-cli": "^6.15.0",
    "@tsconfig/node22": "^22.0.1",
    "@tsconfig/strictest": "^2.0.5",
    "@types/aws-lambda": "^8.10.152",
    "@types/node": "^22.18.4",
    "@types/nunjucks": "^3.2.6",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/eslint-plugin": "^1.3.10",
    "chokidar-cli": "^3.0.0",
    "concurrently": "^9.2.1",
    "csso-cli": "^4.0.2",
    "dotenv": "^17.2.2",
    "eslint": "^9.35.0",
    "eslint-plugin-depend": "^1.2.0",
    "eslint-plugin-n": "^17.23.0",
    "eslint-plugin-playwright": "^2.2.2",
    "fastify-cli": "^7.4.0",
    "knip": "^5.63.1",
    "prettier": "^3.6.2",
    "rolldown": "^1.0.0-beta.38",
    "sass": "^1.92.1",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8.44.0",
    "vitest": "^3.2.4"
  },
  "scripts": {
    "preinstall": "if [ \"$CI\" != true ]; then cat Brewfile; echo; echo; read -p \"Install/update Brewfile dependencies as shown above (y/N)?\" -n 1 -r; echo; if [ \"$REPLY\" == \"y\" ]; then brew bundle check || brew bundle install; fi; fi",
    "postinstall": "if [ \"$CI\" != true ]; then pre-commit install --install-hooks --overwrite; fi",
    "check-types": "tsc --noEmit",
    "eslint": "eslint . --report-unused-disable-directives --cache",
    "eslint:fix": "eslint . --fix --report-unused-disable-directives --cache",
    "tflint": "tflint --init && tflint --recursive --format compact --chdir projects/infra",
    "tflint:fix": "tflint --init && tflint --recursive --format compact --chdir projects/infra --fix",
    "cfnlint": "cfn-lint **/*.cf.yaml",
    "format": "prettier . --check",
    "format:fix": "prettier . --write",
    "knip": "knip",
    "knip:fix": "knip --fix --allow-remove-files",
    "test": "vitest run",
    "test:watch": "vitest",
    "test:coverage": "vitest run --coverage",
    "detect-secrets": "git ls-files -z | xargs -0 detect-secrets-hook --verbose --baseline .secrets.baseline # pragma: allowlist-secret",
    "check-gh-actions": "zizmor .",
    "check-gh-actions:fix": "zizmor . --fix",
    "sam-validate:app": "cd projects/app && sam validate --region eu-west-2 --lint",
    "build:app:shared": "cd projects/app && rm -rf dist && cp -r ./src ./dist && find dist -type f ! -name '*.njk' -print0 | xargs -0 rm -f && cp -r ./src/static dist && sass dist/static/shared-cache/application.scss dist/static/shared-cache/application.css --no-source-map && rm dist/static/shared-cache/application.scss && csso dist/static/shared-cache/application.css --output dist/static/shared-cache/application.css",
    "build:app": "npm run build:app:shared && cd projects/app && rolldown -c rolldown.config.ts && cp ./Makefile dist && cp ../../package.json ./dist/package.json",
    "build-local:app": "npm run build:app:shared && cd projects/app && rolldown -c rolldown.local.config.ts",
    "watch:app": "chokidar \"./projects/app/src/**/*\" -c \"npm run build-local:app\"",
    "run:app": "npm run build-local:app && concurrently 'npm run watch:app' 'cd projects/app && node --watch ./dist/local.js' --kill-others",
    "generate-openapi:public:app": "export $(cat projects/app/.env.openapi | xargs); export REGISTER_PUBLIC_ROUTES=1; cd projects/app && fastify generate-swagger --yaml=true dist_openapi/src/app.js > openapi.public.yaml",
    "generate-openapi:private:app": "export $(cat projects/app/.env.openapi | xargs); export REGISTER_PRIVATE_ROUTES=1; cd projects/app && fastify generate-swagger --yaml=true dist_openapi/src/app.js > openapi.private.yaml",
    "generate-openapi:app": "cd projects/app && rm -rf dist_openapi && tsc && npm run generate-openapi:public:app && npm run generate-openapi:private:app",
    "check-openapi:public:app": "export $(cat projects/app/.env.openapi | xargs); export REGISTER_PUBLIC_ROUTES=1; cd projects/app && fastify generate-swagger --yaml=true dist_openapi/src/app.js > openapi_check.public.yaml && cmp -s openapi.public.yaml openapi_check.public.yaml && spectral lint openapi.public.yaml",
    "check-openapi:private:app": "export $(cat projects/app/.env.openapi | xargs); export REGISTER_PRIVATE_ROUTES=1; cd projects/app && fastify generate-swagger --yaml=true dist_openapi/src/app.js > openapi_check.private.yaml && cmp -s openapi.private.yaml openapi_check.private.yaml && spectral lint openapi.private.yaml",
    "check-openapi:app": "cd projects/app && rm -rf dist_openapi && tsc && npm run check-openapi:public:app && npm run check-openapi:private:app"
  }
}
