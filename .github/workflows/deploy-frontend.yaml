name: Deploy frontend

permissions: {}

on:
  push:
    branches:
      - main
    paths:
      - solutions/frontend/**
      - .github/workflows/deploy-frontend.yaml
      - package.json
      - package-lock.json
      - .npmrc
      - .nvmrc
      - tsconfig.json

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  publish-integration-tests-image:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          persist-credentials: false

      - name: Assume AWS role
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838
        with:
          role-to-assume: ${{ secrets.GH_ACTIONS_ROLE_ARN }}
          aws-region: "eu-west-2"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076

      - name: Build & publish Docker image
        working-directory: solutions/integration-tests
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.POST_DEPLOY_TESTS_IMAGE_REPOSITORY }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push -a $ECR_REGISTRY/$ECR_REPOSITORY

  deploy-frontend:
    needs: publish-integration-tests-image
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          persist-credentials: false

      - name: Set up Node
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444
        with:
          node-version-file: .nvmrc

      - name: Set up SAM CLI
        uses: aws-actions/setup-sam@c71dd89d980e49367c70391e8ada4353f52f2800
        with:
          use-installer: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Assume AWS role
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838
        with:
          role-to-assume: ${{ secrets.GH_ACTIONS_ROLE_ARN }}
          aws-region: "eu-west-2"

      - name: Install dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build:frontend

      - name: Deploy frontend
        uses: govuk-one-login/devplatform-upload-action@fda75612a1b0e5a8c84ae7c44a23340e50e5bbde
        with:
          artifact-bucket-name: ${{ secrets.ARTIFACT_BUCKET_NAME }}
          signing-profile-name: ${{ secrets.SIGNING_PROFILE_NAME }}
          working-directory: ./solutions/frontend
